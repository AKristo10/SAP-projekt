# LOG TRANSFORMACIJA
hist(log(fifa19$value_eur),main='Value in eur histogram',xlab='Value',ylab='Frequency', breaks=50)
hist(log(fifa19$wage_eur),main='Wage in eur histogram',xlab='Wage',ylab='Frequency', breaks=20)
#barplot(summary(fifa19$nationality),las=2,cex.names=.5,main='Nationality of players')
print('Igračeva preferirana noga za udarce: ')
table(fifa19$preferred_foot)
barplot(table(fifa19$team_position),las=2,main='Player team position on the field')
table(fifa19$team_position)
croatian_players = fifa19[fifa19$nationality == "Croatia",]
spanish_players = fifa19[fifa19$nationality == "Spain",]
cat('Prosječna visina hrvatskih igrača iznosi ', mean(croatian_players$height_cm),'\n')
cat('Prosječna visina španjolskih igrača iznosi ', mean(spanish_players$height_cm), '\n')
boxplot(croatian_players$height_cm, spanish_players$height_cm,
names = c('Croatian player heights','Spanish player heights'),
main='Boxplot of croatian and spanish player heights')
# distribucija NORMALNA -> mozes provjerit KOlmogorovljevin teston
hist(croatian_players$height_cm,
breaks=seq(min(croatian_players$height_cm)-1,max(croatian_players$height_cm)+1,3),
main='Histogram of heights of Croatian players',
xlab='Height in cm')
hist(spanish_players$height_cm,
breaks=seq(min(spanish_players$height_cm)-1.5,max(spanish_players$height_cm)+1.5,3),
main='Histogram of heights of Spanish players',
xlab='Height in cm')
qqnorm(croatian_players$height_cm, pch = 1, frame = FALSE,main='Croatian players')
qqline(croatian_players$height_cm, col = "steelblue", lwd = 2)
qqnorm(spanish_players$height_cm, pch = 1, frame = FALSE,main='Spanish players')
qqline(spanish_players$height_cm, col = "steelblue", lwd = 2)
var(croatian_players$height_cm)
var(spanish_players$height_cm)
# dobijemo sve informacije o testiranju
var.test(croatian_players$height_cm, spanish_players$height_cm)
# Bitan je poredak kojim funkciji 't.test()' prosljedjujemo uzorke! -> Jesu li hrvatski VEĆI od španjlskih
t.test(croatian_players$height_cm, spanish_players$height_cm, alt = "greater", var.equal = TRUE)
fifa20 = read.csv("players_20.csv")
dim(fifa20)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
names(bigFiveData)
young = bigFiveData[which(bigFiveData$age <= 15),]
middle = bigFiveData[which(bigFiveData$age > 15 $ bigFiveData$age <= 30),]
young = bigFiveData[which(bigFiveData$age <= 15),]
middle = bigFiveData[which(bigFiveData$age > 15 $ bigFiveData$age <= 30),]
young = bigFiveData[which(bigFiveData$age <= 15),]
middle = bigFiveData[which(bigFiveData$age > 15 & bigFiveData$age <= 30),]
old = bigFiveData[which(bigFiveData$age > 30),]
cat('Prosječna ocjena ekstraverzije mladih ljudi iznosi ', mean(young$extraversion_score), '\n')
cat('Prosječna ocjena ekstraverzije srednjih ljudi iznosi ', mean(middle$extraversion_score), '\n')
cat('Prosječna ocjena ekstraverzije starijih ljudi iznosi ', mean(old$extraversion_score), '\n')
hist(young_people$extraversion_score, main='Younger people extraversion score', xlab='Extraversion score', ylab='Frequency')
hist(young_people$extraversion_score, main='Middle people extraversion score', xlab='Extraversion score', ylab='Frequency')
hist(young$conscientiousness_score, main='Younger people conscientiousness score', xlab='Conscientiousness score', ylab='Frequency')
hist(middle$conscientiousness_score, main='Middle aged people conscientiousness score', xlab='Conscientiousness score', ylab='Frequency')
hist(older$conscientiousness_score, main='Older people conscientiousness score', xlab='Conscientiousness score', ylab='Frequency')
hist(old$conscientiousness_score, main='Older people conscientiousness score', xlab='Conscientiousness score', ylab='Frequency')
boxplot(young$conscientiousness_score, middle$conscientiousness_score, old$conscientiousness_score,
names = c('Young people conscientiousness score','Middle aged people conscientiousness score', 'Old people conscientiousness score'),
main = 'Boxplot of young, middle aged and old people conscientiousness score')
hist(young$extraversion_score, main='Younger people extraversion score', xlab='Extraversion score', ylab='Frequency')
hist(middle$extraversion_score, main='Middle people extraversion score', xlab='Extraversion score', ylab='Frequency')
hist(old$extraversion_score, main='Older people extraversion score', xlab='Extraversion score', ylab='Frequency')
Q1 <- quantile(young$conscientiousness_score, .25)
Q3 <- quantile(young$conscientiousness_score, .75)
IQR <- IQR(young$conscientiousness_score)
Q1 <- quantile(young$conscientiousness_score, .25)
Q3 <- quantile(young$conscientiousness_score, .75)
IQR <- IQR(young$conscientiousness_score)
no_outliers <- subset(young, young$conscientiousness_score> (Q1 - 1.5*IQR) & young$conscientiousness_score< (Q3 + 1.5*IQR))
Q1 <- quantile(young$conscientiousness_score, .25)
Q3 <- quantile(young$conscientiousness_score, .75)
IQR <- IQR(young$conscientiousness_score)
no_outliers <- subset(young, young$conscientiousness_score> (Q1 - 1.5*IQR) & young$conscientiousness_score< (Q3 + 1.5*IQR))
dim(no_outliers)
Q1 <- quantile(middle$conscientiousness_score, .25)
Q3 <- quantile(middle$conscientiousness_score, .75)
IQR <- IQR(middle$conscientiousness_score)
no_outliers <- subset(middle, middle$conscientiousness_score> (Q1 - 1.5*IQR) & middle$conscientiousness_score< (Q3 + 1.5*IQR))
dim(no_outliers)
Q1 <- quantile(old$conscientiousness_score, .25)
Q3 <- quantile(old$conscientiousness_score, .75)
IQR <- IQR(old$conscientiousness_score)
no_outliers <- subset(old, old$conscientiousness_score> (Q1 - 1.5*IQR) & old$conscientiousness_score< (Q3 + 1.5*IQR))
dim(no_outliers)
boxplot(young$conscientiousness_score, middle$conscientiousness_score, old$conscientiousness_score,
names = c('Young people conscientiousness score','Middle aged people conscientiousness score', 'Old people conscientiousness score'),
main = 'Boxplot of young, middle aged and old people conscientiousness score')
boxplot(no_outliers_young$conscientiousness_score, no_outliers_middle$conscientiousness_score, no_outliers_old$conscientiousness_score,
names = c('Young people conscientiousness score','Middle aged people conscientiousness score', 'Old people conscientiousness score'),
main = 'Boxplot of young, middle aged and old people conscientiousness score')
Q1 <- quantile(old$conscientiousness_score, .25)
Q3 <- quantile(old$conscientiousness_score, .75)
IQR <- IQR(old$conscientiousness_score)
no_outliers_old <- subset(old, old$conscientiousness_score> (Q1 - 1.5*IQR) & old$conscientiousness_score< (Q3 + 1.5*IQR))
dim(no_outliers_old)
Q1 <- quantile(old$conscientiousness_score, .25)
Q3 <- quantile(old$conscientiousness_score, .75)
IQR <- IQR(old$conscientiousness_score)
no_outliers_old <- subset(old, old$conscientiousness_score> (Q1 - 1.5*IQR) & old$conscientiousness_score< (Q3 + 1.5*IQR))
dim(no_outliers_old)
dim(no_outliers_old$conscientiousness_score)
Q1 <- quantile(old$conscientiousness_score, .25)
Q3 <- quantile(old$conscientiousness_score, .75)
IQR <- IQR(old$conscientiousness_score)
no_outliers_old <- subset(old, old$conscientiousness_score> (Q1 - 1.5*IQR) & old$conscientiousness_score< (Q3 + 1.5*IQR))
dim(no_outliers_old)
dim(old)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
bigFiveData = read.csv("../big_five_scores.csv")
dim(bigFiveData)
show(bigFiveData)
bigFiveData = read.csv("../big_five_scores.csv")
dim(bigFiveData)
names(bigFiveData)
summary(bigFiveData)
sapply(bigFiveData, class)
cat('Prosječna ocjena ekstraverzije mladih ljudi iznosi ', mean(young$extraversion_score), '\n')
cat('Prosječna ocjena ekstraverzije srednjih ljudi iznosi ', mean(middle$extraversion_score), '\n')
cat('Prosječna ocjena ekstraverzije starijih ljudi iznosi ', mean(old$extraversion_score), '\n')
young = bigFiveData[which(bigFiveData$age <= 15),]
middle = bigFiveData[which(bigFiveData$age > 15 & bigFiveData$age <= 30),]
old = bigFiveData[which(bigFiveData$age > 30),]
cat('Prosječna ocjena savjesnosti mladih ljudi iznosi ', mean(young$conscientiousness_score), '\n')
cat('Prosječna ocjena savjesnosti srednjih ljudi iznosi ', mean(middle$conscientiousness_score), '\n')
cat('Prosječna ocjena savjesnosti starijih ljudi iznosi ', mean(old$conscientiousness_score), '\n')
hist(middle$conscientiousness_score, main='Middle aged people conscientiousness score', xlab='Conscientiousness score', ylab='Frequency')
hist(old$conscientiousness_score, main='Older people conscientiousness score', xlab='Conscientiousness score', ylab='Frequency')
young = bigFiveData[which(bigFiveData$age <= 15),]
middle = bigFiveData[which(bigFiveData$age > 15 & bigFiveData$age <= 30),]
old = bigFiveData[which(bigFiveData$age > 30),]
cat('Prosječna ocjena ekstraverzije mladih ljudi iznosi ', mean(young$extraversion_score), '\n')
cat('Prosječna ocjena ekstraverzije srednjih ljudi iznosi ', mean(middle$extraversion_score), '\n')
cat('Prosječna ocjena ekstraverzije starijih ljudi iznosi ', mean(old$extraversion_score), '\n')
cat('Prosječna ocjena ugodnosti mladih ljudi iznosi ', mean(young$agreeable_score), '\n')
cat('Prosječna ocjena ugodnosti srednjih ljudi iznosi ', mean(middle$agreeable_score), '\n')
cat('Prosječna ocjena ugodnosti starijih ljudi iznosi ', mean(old$agreeable_score), '\n')
cat('Prosječna ocjena savjesnosti mladih ljudi iznosi ', mean(young$conscientiousness_score), '\n')
cat('Prosječna ocjena savjesnosti srednjih ljudi iznosi ', mean(middle$conscientiousness_score), '\n')
cat('Prosječna ocjena savjesnosti starijih ljudi iznosi ', mean(old$conscientiousness_score), '\n')
cat('Prosječna ocjena neuroticizma mladih ljudi iznosi ', mean(young$neuroticism_score), '\n')
cat('Prosječna ocjena neuroticizma srednjih ljudi iznosi ', mean(middle$neuroticism_score), '\n')
cat('Prosječna ocjena neuroticizma starijih ljudi iznosi ', mean(old$neuroticism_score), '\n')
cat('Prosječna ocjena otvorenosti mladih ljudi iznosi ', mean(young$openness_score), '\n')
cat('Prosječna ocjena otvorenosti srednjih ljudi iznosi ', mean(middle$openness_score), '\n')
cat('Prosječna ocjena otvorenosti starijih ljudi iznosi ', mean(old$openness_score), '\n')
boxplot(young$extraversion_score, middle$extraversion_score, old$extraversion_score,
names = c('Young people extraversion score','Middle aged people extraversion score', 'Old people extraversion score'),
main = 'Boxplot of young, middle aged and old people extraversion score')
boxplot(young$agreeable_score, middle$agreeable_score, old$agreeable_score,
names = c('Young people agreeable score','Middle aged people agreeable score', 'Old people agreeable score'),
main = 'Boxplot of young, middle aged and old people agreeable score')
boxplot(young$conscientiousness_score, middle$conscientiousness_score, old$conscientiousness_score,
names = c('Young people conscientiousness score','Middle aged people conscientiousness score', 'Old people conscientiousness score'),
main = 'Boxplot of young, middle aged and old people conscientiousness score')
boxplot(young$neuroticism_score, middle$neuroticism_score, old$neuroticism_score,
names = c('Young people neuroticism score','Middle aged people neuroticism score', 'Old people neuroticism score'),
main = 'Boxplot of young, middle aged and old people neuroticism score')
boxplot(young$openness_score, middle$openness_score, old$openness_score,
names = c('Young people openness score','Middle aged people openness score', 'Old people openness score'),
main = 'Boxplot of young, middle aged and old people openness score')
fit.opennes = lm(age~openness_score,data=bigFiveData)
fit.extraversion = lm(age~extraversion_score,data=bigFiveData)
fit.agreeable = lm(age~agreeable_score,data=bigFiveData)
fit.conscientiousness = lm(age~conscientiousness_score,data=bigFiveData)
fit.neuroticism = lm(age~neuroticism_score,data=bigFiveData)
hist(young$conscientiousness_score, main='Younger people conscientiousness score', xlab='Conscientiousness score', ylab='Frequency')
hist(middle$conscientiousness_score, main='Middle aged people conscientiousness score', xlab='Conscientiousness score', ylab='Frequency')
hist(old$conscientiousness_score, main='Older people conscientiousness score', xlab='Conscientiousness score', ylab='Frequency')
hist(young$conscientiousness_score, main='Younger people conscientiousness score', xlab='Conscientiousness score', ylab='Frequency')
plot(bigFiveData$openness_score, bigFiveData$age) #graficki prikaz podataka
lines(bigFiveData$openness_score,fit.opennes$fitted.values,col="red") #linija
plot(bigFiveData$openness_score, bigFiveData$age,main = 'Scatter plot for openness score') #graficki prikaz podataka
lines(bigFiveData$openness_score,fit.opennes$fitted.values,col="red") #linija
plot(bigFiveData$extraversion_score, bigFiveData$age, main = "Scatter plot for axtraversion score and age") #graficki prikaz podataka
lines(bigFiveData$extraversion_score,fit.extraversion$fitted.values,col="red") #linija
plot(bigFiveData$agreeable_score, bigFiveData$age, main = "Scatter plot for agreeable score and age") #graficki prikaz podataka
lines(bigFiveData$agreeable_score,fit.agreeable$fitted.values,col="red") #linija
plot(bigFiveData$conscientiousness_score, bigFiveData$age, main = "Scatter plot for conscientiousness score and age") #graficki prikaz podataka
lines(bigFiveData$conscientiousness_score,fit.conscientiousness$fitted.values,col="red") #linija
plot(bigFiveData$neuroticism_score, bigFiveData$age, main = "Scatter plot for neuroticism score and age") #graficki prikaz podataka
lines(bigFiveData$neuroticism_score,fit.neuroticism$fitted.values,col="red") #linija
summary(fit.extraversion)
summary(fit.agreeable)
summary(fit.conscientiousness)
summary(fit.neuroticism)
summary(fit.opennes)
# ZDRUŽIMO SVE CENTRALNE POZICIJE
for (column_name in c("ST","CF","CAM","CM","CDM","CB")){
fifa19_copy$team_position[fifa19_copy$team_position == column_name] = "Central_positions";
}
croatian_players = fifa19[fifa19$nationality == "Croatia",]
spanish_players = fifa19[fifa19$nationality == "Spain",]
cat('Prosječna visina hrvatskih igrača iznosi ', mean(croatian_players$height_cm),'\n')
cat('Prosječna visina španjolskih igrača iznosi ', mean(spanish_players$height_cm), '\n')
boxplot(croatian_players$height_cm, spanish_players$height_cm,
names = c('Croatian player heights','Spanish player heights'),
main='Boxplot of croatian and spanish player heights')
# distribucija NORMALNA -> mozes provjerit KOlmogorovljevin teston
hist(croatian_players$height_cm,
breaks=seq(min(croatian_players$height_cm)-1,max(croatian_players$height_cm)+1,3),
main='Histogram of heights of Croatian players',
xlab='Height in cm')
hist(spanish_players$height_cm,
breaks=seq(min(spanish_players$height_cm)-1.5,max(spanish_players$height_cm)+1.5,3),
main='Histogram of heights of Spanish players',
xlab='Height in cm')
qqnorm(croatian_players$height_cm, pch = 1, frame = FALSE,main='Croatian players')
qqline(croatian_players$height_cm, col = "steelblue", lwd = 2)
qqnorm(spanish_players$height_cm, pch = 1, frame = FALSE,main='Spanish players')
qqline(spanish_players$height_cm, col = "steelblue", lwd = 2)
var(croatian_players$height_cm)
var(spanish_players$height_cm)
# dobijemo sve informacije o testiranju
var.test(croatian_players$height_cm, spanish_players$height_cm)
fifa20 = read.csv("players_20.csv")
dim(fifa20)
names(fifa20)
#Spojimo ih i stavimo .19 i .20 da znamo kojki je koji
merged_df = merge(fifa19, fifa20, by="sofifa_id", suffixes = c(".19",".20"))
country = 'Spain'
len = length(merged_df[merged_df$nationality.19 == country,]$overall.19 -  merged_df[merged_df$nationality.19 == country,]$overall.20)
hist(merged_df[merged_df$nationality.19 == country,]$overall.19,
main=paste('Histogram of players from ',country,' in 2019 (',len,' players)'),
xlab='Overall score')
hist(merged_df[merged_df$nationality.19 == country,]$overall.20,
main=paste('Histogram of players from ',country,' in 2020 (',len,' players)'),
xlab='Overall score')
hist(merged_df[merged_df$nationality.19 == country,]$overall.19 -
merged_df[merged_df$nationality.19 == country,]$overall.20,
main=paste('Histogram of players from ',country,' in 2019 - 2020 (',len,' players)'),
xlab='Difference of overall score')
qqnorm(merged_df[merged_df$nationality.19 == country,]$overall.19 - merged_df[merged_df$nationality.19 == country,]$overall.20,
pch = 1,
frame = FALSE,
main=paste('QQ-plot for overall score of players from',country,' (',len,'players)'))
qqline(merged_df[merged_df$nationality.19 == country,]$overall.19 - merged_df[merged_df$nationality.19 == country,]$overall.20,
col = "steelblue", lwd = 2)
t.test(merged_df[merged_df$nationality.19 == country,]$overall.19,
merged_df[merged_df$nationality.19 == country,]$overall.20,
paired = TRUE,
alt = "less")
#OVO POGLEDAJ NE RADIIIII
levels(fifa19$preferred_foot)
levels(fifa19$team_position)
table(fifa19$preferred_foot)
table(fifa19$team_position)
knitr::include_graphics("team_positions.png")
#provjerava jel nesto jednako...
fifa19_copy = data.frame(fifa19)
tracemem(fifa19)==tracemem(fifa19_copy)
untracemem(fifa19_copy)
untracemem(fifa19_copy)
fifa19_copy['team_position'] <- sapply(fifa19_copy['team_position'], as.character);
# ZDRUŽIMO SVE CENTRALNE POZICIJE
for (column_name in c("ST","CF","CAM","CM","CDM","CB")){
fifa19_copy$team_position[fifa19_copy$team_position == column_name] = "Central_positions";
}
# ZDRUZIMO SVE LIJEVE POZICIJE
for (column_name in c("LS","LW","LF","LAM","LM","LCM", "LWB", "LDM", "LB", "LCB")){
fifa19_copy$team_position[fifa19_copy$team_position == column_name] = "Left_positions";
}
# ZDRUZIMO SVE DESNE POZICIJE
for (column_name in c("RS","RF","RW","RAM", "RCM","RM", "RDM", "RWB", "RCB", "RB")){
fifa19_copy$team_position[fifa19_copy$team_position == column_name] = "Right_positions";
}
tbl = table(fifa19_copy$team_position)
print(tbl)
tbl = table(fifa19_copy[fifa19_copy$team_position == "Central_positions" | fifa19_copy$team_position == "Left_positions" | fifa19_copy$team_position == "Right_positions",]$team_position,
fifa19_copy[fifa19_copy$team_position == "Central_positions" | fifa19_copy$team_position == "Left_positions" | fifa19_copy$team_position == "Right_positions",]$preferred_foot)
tbl
#potrebno za TEST NEZAVINSOSTI ...siti se predavanja i formula, logicno je sve, al pogledaj
# OPAZENE o i OCEKIVANE e vjerojatnosti...
added_margins_tbl = addmargins(tbl)
print(added_margins_tbl)
for (col_names in colnames(added_margins_tbl)){
for (row_names in rownames(added_margins_tbl)){
if (!(row_names == 'Sum' | col_names == 'Sum') ){
cat('Očekivane frekvencije za razred ',col_names,'-',row_names,': ',(added_margins_tbl[row_names,'Sum'] * added_margins_tbl['Sum',col_names]) / added_margins_tbl['Sum','Sum'],'\n')
}
}
}
# HI KVADRAT TEST
chisq.test(tbl,correct=F)
selected.model = fit.conscientiousness
plot(selected.model$residuals)
hist((selected.model$residuals))
hist(rstandard(selected.model))
#q-q plot reziduala s linijom normalne distribucije
qqnorm(rstandard(selected.model))
qqline(rstandard(selected.model))
selected.model = fit.agreeable
plot(selected.model$residuals)
#q-q plot reziduala s linijom normalne distribucije
qqnorm(rstandard(selected.model))
qqline(rstandard(selected.model))
#q-q plot reziduala s linijom normalne distribucije
qqnorm(rstandard(fit.extraversion))
qqline(rstandard(fit.extraversion))
#q-q plot reziduala s linijom normalne distribucije
qqnorm(rstandard(fit.neuroticism))
qqline(rstandard(fit.neuroticism))
#q-q plot reziduala s linijom normalne distribucije
qqnorm(rstandard(fit.opennes))
qqline(rstandard(fit.opennes))
selected.model = fit.conscientiousness
#plot(selected.model$residuals)
#q-q plot reziduala s linijom normalne distribucije
qqnorm(rstandard(selected.model))
qqline(rstandard(selected.model))
#q-q plot reziduala s linijom normalne distribucije
qqnorm((selected.model))
#q-q plot reziduala s linijom normalne distribucije
qqnorm(rstandard(selected.model))
qqline(rstandard(selected.model))
plot(selected.model$fitted.values,selected.model$residuals)
ks.test(rstandard(fit.conscientiousness),"pnorm")
require(nortest)
lillie.test(rstandard(fit.conscientiousness))
plot(bigFiveData$conscientiousness_score*100, bigFiveData$age, main = "Scatter plot for conscientiousness score and age") #graficki prikaz podataka
lines(bigFiveData$conscientiousness_score,fit.conscientiousness$fitted.values,col="red") #linija
plot(bigFiveData$age, bigFiveData$conscientiousness_score*100, main = "Scatter plot for conscientiousness score and age") #graficki prikaz podataka
lines(bigFiveData$conscientiousness_score,fit.conscientiousness$fitted.values,col="red") #linija
plot(bigFiveData$age, bigFiveData$conscientiousness_score, main = "Scatter plot for conscientiousness score and age") #graficki prikaz podataka
lines(bigFiveData$conscientiousness_score,fit.conscientiousness$fitted.values,col="red") #linija
view(bigFiveData)
View(bigFiveData)
fit.conscientiousness_age = lm(conscientiousness_score~age, data = bigFiveData)
fit.conscientiousness_age = lm(conscientiousness_score~age, data = bigFiveData)
qqnorm(rstandard(fit.conscientiousness_age))
qqline(rstandard(fit.conscientiousness_age))
fit.conscientiousness_age = lm(conscientiousness_score~age, data = bigFiveData)
qqnorm(rstandard(fit.conscientiousness_age))
qqline(rstandard(fit.conscientiousness_age))
plot(fit.conscientiousness_age$fitted.values,fit.conscientiousness_age$residuals)
ks.test(rstandard(fit.conscientiousness_age),"pnorm")
require(nortest)
lillie.test(rstandard(fit.conscientiousness_age))
fit.conscientiousness_age = lm(conscientiousness_score~age, data = bigFiveData)
qqnorm(rstandard(fit.conscientiousness_age))
qqline(rstandard(fit.conscientiousness_age))
hist((fit.conscientiousness_age$residuals))
hist(fit.conscientiousness_age)
hist(rstandard(fit.conscientiousness_age))
sumamry(fit.conscientiousness_age)
sumary(fit.conscientiousness_age)
summary(fit.conscientiousness_age)
plot(bigFiveData$age, bigFiveData$conscientiousness_score,main = 'Scatter plot for openness scores and age')
lines(bigFiveData$conscientiousness_score,fit.conscientiousness_age$fitted.values,col="red") #linija
ks.test(rstandard(fit.conscientiousness_age),"pnorm")
lillie.test(rstandard(fit.conscientiousness_age))
plot(bigFiveData$age, bigFiveData$conscientiousness_score,main = 'Scatter plot for conscientiousness scores and age')
lines(bigFiveData$conscientiousness_score,fit.conscientiousness_age$fitted.values,col="red") #linija
fit.conscientiousness_age = lm(conscientiousness_score~-1/age + 1, data = bigFiveData)
plot(bigFiveData$age, bigFiveData$conscientiousness_score,main = 'Scatter plot for conscientiousness scores and age')
lines(bigFiveData$conscientiousness_score,fit.conscientiousness_age$fitted.values,col="red") #linija
qqnorm(rstandard(fit.conscientiousness_age))
qqline(rstandard(fit.conscientiousness_age))
hist(bigFiveData$age,main='Age', xlab='Age', ylab='Frequency')
#Koliko ima ljudi starih 100 godina?
count(bigFiveData$age=100)
hist(bigFiveData$age,main='Age', xlab='Age', ylab='Frequency')
#Koliko ima ljudi starih 100 godina?
count(bigFiveData, age=100)
hist(bigFiveData$age,main='Age', xlab='Age', ylab='Frequency')
#Koliko ima ljudi starih 100 godina?
print(count(bigFiveData, age=100))
summary(fit.conscientiousness_age)
lillie.test(rstandard(fit.conscientiousness_age))
ks.test(rstandard(fit.conscientiousness_age),"pnorm")
hist(rstandard(fit.conscientiousness_age))
hist((fit.conscientiousness_age$residuals))
summary(fit.conscientiousness_age)
fit.conscientiousness_age = lm(conscientiousness_score~age, data = bigFiveData)
plot(bigFiveData$age, bigFiveData$conscientiousness_score,main = 'Scatter plot for conscientiousness scores and age')
lines(bigFiveData$conscientiousness_score,fit.conscientiousness_age$fitted.values,col="red") #linija
qqnorm(rstandard(fit.conscientiousness_age))
qqline(rstandard(fit.conscientiousness_age))
Q1 <- quantile(bigFiveData$conscientiousness_score, .25)
Q3 <- quantile(bigFiveData$conscientiousness_score, .75)
IQR <- IQR(bigFiveData$conscientiousness_score)
Q1 <- quantile(bigFiveData$conscientiousness_score, .25)
Q3 <- quantile(bigFiveData$conscientiousness_score, .75)
IQR <- IQR(bigFiveData$conscientiousness_score)
no_outliers <- subset(bigFiveData, bigFiveData$conscientiousness_score> (Q1 - 1.5*IQR) & bigFiveData$conscientiousness_score< (Q3 + 1.5*IQR))
Q1 <- quantile(bigFiveData$conscientiousness_score, .25)
Q3 <- quantile(bigFiveData$conscientiousness_score, .75)
IQR <- IQR(bigFiveData$conscientiousness_score)
no_outliers <- subset(bigFiveData, bigFiveData$conscientiousness_score> (Q1 - 1.5*IQR) & bigFiveData$conscientiousness_score< (Q3 + 1.5*IQR))
dim(no_outliers)
Q1 <- quantile(bigFiveDataWithOutliers$conscientiousness_score, .25)
Q1 <- quantile(bigFiveData$conscientiousness_score, .25)
Q3 <- quantile(bigFiveData$conscientiousness_score, .75)
IQR <- IQR(bigFiveData$conscientiousness_score)
bigFiveDataNew <- subset(bigFiveData, bigFiveData$conscientiousness_score> (Q1 - 1.5*IQR) & bigFiveData$conscientiousness_score< (Q3 + 1.5*IQR))
dim(bigFiveDataNew)
#Q1 <- quantile(bigFiveData$conscientiousness_score, .25)
#Q3 <- quantile(bigFiveData$conscientiousness_score, .75)
#IQR <- IQR(bigFiveData$conscientiousness_score)
Q1 <- quantile(bigFiveData$age, .25)
Q3 <- quantile(bigFiveData$age, .75)
IQR <- IQR(bigFiveData$age)
bigFiveDataNew <- subset(bigFiveData, bigFiveData$conscientiousness_score> (Q1 - 1.5*IQR) & bigFiveData$conscientiousness_score< (Q3 + 1.5*IQR))
dim(bigFiveDataNew)
#Q1 <- quantile(bigFiveData$conscientiousness_score, .25)
#Q3 <- quantile(bigFiveData$conscientiousness_score, .75)
#IQR <- IQR(bigFiveData$conscientiousness_score)
Q1 <- quantile(bigFiveData$age, .25)
Q3 <- quantile(bigFiveData$age, .75)
IQR <- IQR(bigFiveData$age)
bigFiveDataNew <- subset(bigFiveData, bigFiveData$age> (Q1 - 1.5*IQR) & bigFiveData$age< (Q3 + 1.5*IQR))
dim(bigFiveDataNew)
#Q1 <- quantile(bigFiveData$conscientiousness_score, .25)
#Q3 <- quantile(bigFiveData$conscientiousness_score, .75)
#IQR <- IQR(bigFiveData$conscientiousness_score)
Q1 <- quantile(bigFiveData$age, .25)
Q3 <- quantile(bigFiveData$age, .75)
IQR <- IQR(bigFiveData$age)
bigFiveDataNew <- subset(bigFiveData, bigFiveData$age> (Q1 - 1.5*IQR) & bigFiveData$age< (Q3 + 1.5*IQR))
dim(bigFiveDataNew)
#Q1 <- quantile(bigFiveData$conscientiousness_score, .25)
#Q3 <- quantile(bigFiveData$conscientiousness_score, .75)
#IQR <- IQR(bigFiveData$conscientiousness_score)
Q1 <- quantile(bigFiveData$age, .25)
Q3 <- quantile(bigFiveData$age, .75)
IQR <- IQR(bigFiveData$age)
bigFiveDataNew <- subset(bigFiveData, bigFiveData$age> (Q1 - 1.5*IQR) & bigFiveData$age (Q3 + 1.5*IQR))
#Q1 <- quantile(bigFiveData$conscientiousness_score, .25)
#Q3 <- quantile(bigFiveData$conscientiousness_score, .75)
#IQR <- IQR(bigFiveData$conscientiousness_score)
Q1 <- quantile(bigFiveData$age, .25)
Q3 <- quantile(bigFiveData$age, .75)
IQR <- IQR(bigFiveData$age)
bigFiveDataNew <- subset(bigFiveData, bigFiveData$age> (Q1 - 1.5*IQR) & bigFiveData$age< (Q3 + 1.5*IQR))
dim(bigFiveDataNew)
#Q1 <- quantile(bigFiveData$conscientiousness_score, .25)
#Q3 <- quantile(bigFiveData$conscientiousness_score, .75)
#IQR <- IQR(bigFiveData$conscientiousness_score)
Q1 <- quantile(bigFiveData$age, .25)
Q3 <- quantile(bigFiveData$age, .75)
IQR <- IQR(bigFiveData$age)
bigFiveDataNew <- subset(bigFiveData, bigFiveData$age> (Q1 - 1.5*IQR) & bigFiveData$age< (Q3 + 1.5*IQR))
dim(bigFiveDataNew)
fit.conscientiousness_age = lm(conscientiousness_score~age, data = bigFiveDataNew)
plot(bigFiveDataNew$age, bigFiveDatNewa$conscientiousness_score,main = 'Scatter plot for conscientiousness scores and age')
plot(bigFiveDataNew$age, bigFiveDatNew$conscientiousness_score,main = 'Scatter plot for conscientiousness scores and age')
plot(bigFiveDataNew$age, bigFiveDataNew$conscientiousness_score,main = 'Scatter plot for conscientiousness scores and age')
lines(bigFiveDatNewa$conscientiousness_score,fit.conscientiousness_age$fitted.values,col="red") #linija
qqnorm(rstandard(fit.conscientiousness_age))
qqline(rstandard(fit.conscientiousness_age))
hist((fit.conscientiousness_age$residuals))
hist(rstandard(fit.conscientiousness_age))
ks.test(rstandard(fit.conscientiousness_age),"pnorm")
lillie.test(rstandard(fit.conscientiousness_age))
summary(fit.conscientiousness_age)
Q1 <- quantile(bigFiveData$conscientiousness_score, .25)
Q3 <- quantile(bigFiveData$conscientiousness_score, .75)
IQR <- IQR(bigFiveData$conscientiousness_score)
#Q1 <- quantile(bigFiveData$age, .25)
#Q3 <- quantile(bigFiveData$age, .75)
#IQR <- IQR(bigFiveData$age)
bigFiveDataNew <- subset(bigFiveData, bigFiveData$conscientiousness_score> (Q1 - 1.5*IQR) & bigFiveData$conscientiousness_score< (Q3 + 1.5*IQR))
dim(bigFiveDataNew)
fit.conscientiousness_age = lm(conscientiousness_score~age, data = bigFiveDataNew)
hist(old$conscientiousness_score, main='Older people conscientiousness score', xlab='Conscientiousness score', ylab='Frequency')
selected.model = fit.conscientiousness
#plot(selected.model$residuals)
hist((selected.model$residuals))
hist(rstandard(selected.model))
#q-q plot reziduala s linijom normalne distribucije
qqnorm(rstandard(selected.model))
qqline(rstandard(selected.model))
Q1 <- quantile(bigFiveData$conscientiousness_score, .25)
Q3 <- quantile(bigFiveData$conscientiousness_score, .75)
IQR <- IQR(bigFiveData$conscientiousness_score)
#Q1 <- quantile(bigFiveData$age, .25)
#Q3 <- quantile(bigFiveData$age, .75)
#IQR <- IQR(bigFiveData$age)
bigFiveDataNew <- subset(bigFiveData, bigFiveData$conscientiousness_score> (Q1 - 1.5*IQR) & bigFiveData$conscientiousness_score< (Q3 + 1.5*IQR))
dim(bigFiveDataNew)
fit.conscientiousness_age = lm(conscientiousness_score~age, data = bigFiveDataNew)
plot(bigFiveDataNew$age, bigFiveDataNew$conscientiousness_score,main = 'Scatter plot for conscientiousness scores and age')
lines(bigFiveDatNewa$conscientiousness_score,fit.conscientiousness_age$fitted.values,col="red") #linija
qqnorm(rstandard(fit.conscientiousness_age))
qqline(rstandard(fit.conscientiousness_age))
summary(fit.conscientiousness_age)
Q1 <- quantile(bigFiveData$conscientiousness_score, .25)
Q3 <- quantile(bigFiveData$conscientiousness_score, .75)
IQR <- IQR(bigFiveData$conscientiousness_score)
#Q1 <- quantile(bigFiveData$age, .25)
#Q3 <- quantile(bigFiveData$age, .75)
#IQR <- IQR(bigFiveData$age)
bigFiveDatatemp <- subset(bigFiveData, bigFiveData$conscientiousness_score> (Q1 - 1.5*IQR) & bigFiveData$conscientiousness_score< (Q3 + 1.5*IQR))
Q1 <- quantile(bigFiveDatatemp$age, .25)
Q3 <- quantile(bigFiveDatatemp$age, .75)
IQR <- IQR(bigFiveDatatemp$age)
bigFiveDataNew <- subset(bigFiveDatatemp, bigFiveDatatemp$age> (Q1 - 1.5*IQR) & bigFiveDatatemp$age< (Q3 + 1.5*IQR))
dim(bigFiveDataNew)
fit.conscientiousness_age = lm(conscientiousness_score~age, data = bigFiveDataNew)
plot(bigFiveDataNew$age, bigFiveDataNew$conscientiousness_score,main = 'Scatter plot for conscientiousness scores and age')
lines(bigFiveDatNewa$conscientiousness_score,fit.conscientiousness_age$fitted.values,col="red") #linija
qqnorm(rstandard(fit.conscientiousness_age))
qqline(rstandard(fit.conscientiousness_age))
ks.test(rstandard(fit.conscientiousness_age),"pnorm")
require(nortest)
lillie.test(rstandard(fit.conscientiousness_age))
summary(fit.conscientiousness_age)
plot(bigFiveDataNew$age, bigFiveDataNew$conscientiousness_score,main = 'Scatter plot for conscientiousness scores and age')
lines(bigFiveDataNew$conscientiousness_score,fit.conscientiousness_age$fitted.values,col="red") #linija
cor(bigFiveDataNew$age, bigFiveDataNew$conscientiousness_score)
cor(bigFiveDataNew$conscientiousness_score, bigFiveDataNew$age)
cor(bigFiveDataNew$age, bigFiveDataNew$conscientiousness_score)
cor.test(bigFiveDataNew$conscientiousness_score, bigFiveDataNew$age)
